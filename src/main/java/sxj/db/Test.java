/**
 * This class is generated by jOOQ
 */
package sxj.db;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import sxj.db.tables.Clazz;
import sxj.db.tables.CodeMessage;
import sxj.db.tables.Course;
import sxj.db.tables.EmailInfo;
import sxj.db.tables.Event;
import sxj.db.tables.ExamCon;
import sxj.db.tables.File;
import sxj.db.tables.Order;
import sxj.db.tables.OrderItem;
import sxj.db.tables.Problem;
import sxj.db.tables.Product;
import sxj.db.tables.Question;
import sxj.db.tables.Student;
import sxj.db.tables.User;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Test extends SchemaImpl {

    private static final long serialVersionUID = -678158283;

    /**
     * The reference instance of <code>test</code>
     */
    public static final Test TEST = new Test();

    /**
     * The table <code>test.clazz</code>.
     */
    public final Clazz CLAZZ = sxj.db.tables.Clazz.CLAZZ;

    /**
     * The table <code>test.code_message</code>.
     */
    public final CodeMessage CODE_MESSAGE = sxj.db.tables.CodeMessage.CODE_MESSAGE;

    /**
     * The table <code>test.course</code>.
     */
    public final Course COURSE = sxj.db.tables.Course.COURSE;

    /**
     * The table <code>test.email_info</code>.
     */
    public final EmailInfo EMAIL_INFO = sxj.db.tables.EmailInfo.EMAIL_INFO;

    /**
     * The table <code>test.event</code>.
     */
    public final Event EVENT = sxj.db.tables.Event.EVENT;

    /**
     * The table <code>test.exam_con</code>.
     */
    public final ExamCon EXAM_CON = sxj.db.tables.ExamCon.EXAM_CON;

    /**
     * The table <code>test.file</code>.
     */
    public final File FILE = sxj.db.tables.File.FILE;

    /**
     * The table <code>test.order</code>.
     */
    public final Order ORDER = sxj.db.tables.Order.ORDER;

    /**
     * The table <code>test.order_item</code>.
     */
    public final OrderItem ORDER_ITEM = sxj.db.tables.OrderItem.ORDER_ITEM;

    /**
     * The table <code>test.problem</code>.
     */
    public final Problem PROBLEM = sxj.db.tables.Problem.PROBLEM;

    /**
     * The table <code>test.product</code>.
     */
    public final Product PRODUCT = sxj.db.tables.Product.PRODUCT;

    /**
     * The table <code>test.question</code>.
     */
    public final Question QUESTION = sxj.db.tables.Question.QUESTION;

    /**
     * The table <code>test.student</code>.
     */
    public final Student STUDENT = sxj.db.tables.Student.STUDENT;

    /**
     * The table <code>test.user</code>.
     */
    public final User USER = sxj.db.tables.User.USER;

    /**
     * No further instances allowed
     */
    private Test() {
        super("test", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Clazz.CLAZZ,
            CodeMessage.CODE_MESSAGE,
            Course.COURSE,
            EmailInfo.EMAIL_INFO,
            Event.EVENT,
            ExamCon.EXAM_CON,
            File.FILE,
            Order.ORDER,
            OrderItem.ORDER_ITEM,
            Problem.PROBLEM,
            Product.PRODUCT,
            Question.QUESTION,
            Student.STUDENT,
            User.USER);
    }
}
