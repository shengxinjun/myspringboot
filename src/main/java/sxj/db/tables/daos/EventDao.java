/**
 * This class is generated by jOOQ
 */
package sxj.db.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import sxj.db.tables.Event;
import sxj.db.tables.records.EventRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class EventDao extends DAOImpl<EventRecord, sxj.db.tables.pojos.Event, Integer> {

    /**
     * Create a new EventDao without any configuration
     */
    public EventDao() {
        super(Event.EVENT, sxj.db.tables.pojos.Event.class);
    }

    /**
     * Create a new EventDao with an attached configuration
     */
    @Autowired
    public EventDao(Configuration configuration) {
        super(Event.EVENT, sxj.db.tables.pojos.Event.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(sxj.db.tables.pojos.Event object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Event> fetchById(Integer... values) {
        return fetch(Event.EVENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public sxj.db.tables.pojos.Event fetchOneById(Integer value) {
        return fetchOne(Event.EVENT.ID, value);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Event> fetchByTitle(String... values) {
        return fetch(Event.EVENT.TITLE, values);
    }

    /**
     * Fetch records that have <code>start IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Event> fetchByStart(String... values) {
        return fetch(Event.EVENT.START, values);
    }

    /**
     * Fetch records that have <code>end IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Event> fetchByEnd(String... values) {
        return fetch(Event.EVENT.END, values);
    }

    /**
     * Fetch records that have <code>class_name IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Event> fetchByClassName(String... values) {
        return fetch(Event.EVENT.CLASS_NAME, values);
    }

    /**
     * Fetch records that have <code>user_Id IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Event> fetchByUserId(Integer... values) {
        return fetch(Event.EVENT.USER_ID, values);
    }
}
