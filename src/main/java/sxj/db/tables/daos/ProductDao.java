/**
 * This class is generated by jOOQ
 */
package sxj.db.tables.daos;


import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import sxj.db.tables.Product;
import sxj.db.tables.records.ProductRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ProductDao extends DAOImpl<ProductRecord, sxj.db.tables.pojos.Product, Integer> {

    /**
     * Create a new ProductDao without any configuration
     */
    public ProductDao() {
        super(Product.PRODUCT, sxj.db.tables.pojos.Product.class);
    }

    /**
     * Create a new ProductDao with an attached configuration
     */
    @Autowired
    public ProductDao(Configuration configuration) {
        super(Product.PRODUCT, sxj.db.tables.pojos.Product.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(sxj.db.tables.pojos.Product object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Product> fetchById(Integer... values) {
        return fetch(Product.PRODUCT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public sxj.db.tables.pojos.Product fetchOneById(Integer value) {
        return fetchOne(Product.PRODUCT.ID, value);
    }

    /**
     * Fetch records that have <code>imgs IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Product> fetchByImgs(String... values) {
        return fetch(Product.PRODUCT.IMGS, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Product> fetchByDescription(String... values) {
        return fetch(Product.PRODUCT.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Product> fetchByName(String... values) {
        return fetch(Product.PRODUCT.NAME, values);
    }

    /**
     * Fetch records that have <code>price IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Product> fetchByPrice(Double... values) {
        return fetch(Product.PRODUCT.PRICE, values);
    }

    /**
     * Fetch records that have <code>update_date IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Product> fetchByUpdateDate(Date... values) {
        return fetch(Product.PRODUCT.UPDATE_DATE, values);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Product> fetchByCreateDate(Date... values) {
        return fetch(Product.PRODUCT.CREATE_DATE, values);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Product> fetchByDeleted(Integer... values) {
        return fetch(Product.PRODUCT.DELETED, values);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Product> fetchByType(String... values) {
        return fetch(Product.PRODUCT.TYPE, values);
    }
}
