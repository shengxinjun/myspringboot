/**
 * This class is generated by jOOQ
 */
package sxj.db.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import sxj.db.tables.Student;
import sxj.db.tables.records.StudentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class StudentDao extends DAOImpl<StudentRecord, sxj.db.tables.pojos.Student, Integer> {

    /**
     * Create a new StudentDao without any configuration
     */
    public StudentDao() {
        super(Student.STUDENT, sxj.db.tables.pojos.Student.class);
    }

    /**
     * Create a new StudentDao with an attached configuration
     */
    @Autowired
    public StudentDao(Configuration configuration) {
        super(Student.STUDENT, sxj.db.tables.pojos.Student.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(sxj.db.tables.pojos.Student object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Student> fetchById(Integer... values) {
        return fetch(Student.STUDENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public sxj.db.tables.pojos.Student fetchOneById(Integer value) {
        return fetchOne(Student.STUDENT.ID, value);
    }

    /**
     * Fetch records that have <code>number IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Student> fetchByNumber(String... values) {
        return fetch(Student.STUDENT.NUMBER, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Student> fetchByName(String... values) {
        return fetch(Student.STUDENT.NAME, values);
    }

    /**
     * Fetch records that have <code>clazz_id IN (values)</code>
     */
    public List<sxj.db.tables.pojos.Student> fetchByClazzId(Integer... values) {
        return fetch(Student.STUDENT.CLAZZ_ID, values);
    }
}
