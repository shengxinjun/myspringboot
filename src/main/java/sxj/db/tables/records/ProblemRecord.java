/**
 * This class is generated by jOOQ
 */
package sxj.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import sxj.db.tables.Problem;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProblemRecord extends UpdatableRecordImpl<ProblemRecord> implements Record7<Integer, String, Double, Integer, Integer, Integer, Double> {

    private static final long serialVersionUID = 7274132;

    /**
     * Setter for <code>test.problem.id</code>.
     */
    public ProblemRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>test.problem.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.problem.name</code>. 问题名称
     */
    public ProblemRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>test.problem.name</code>. 问题名称
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.problem.score</code>. ??
     */
    public ProblemRecord setScore(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>test.problem.score</code>. ??
     */
    public Double getScore() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>test.problem.course_id</code>. course_id
     */
    public ProblemRecord setCourseId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>test.problem.course_id</code>. course_id
     */
    public Integer getCourseId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>test.problem.student_id</code>. student_id
     */
    public ProblemRecord setStudentId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>test.problem.student_id</code>. student_id
     */
    public Integer getStudentId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>test.problem.question_id</code>. ??question
     */
    public ProblemRecord setQuestionId(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>test.problem.question_id</code>. ??question
     */
    public Integer getQuestionId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>test.problem.weight</code>. ??
     */
    public ProblemRecord setWeight(Double value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>test.problem.weight</code>. ??
     */
    public Double getWeight() {
        return (Double) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, Double, Integer, Integer, Integer, Double> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, Double, Integer, Integer, Integer, Double> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Problem.PROBLEM.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Problem.PROBLEM.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Problem.PROBLEM.SCORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Problem.PROBLEM.COURSE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Problem.PROBLEM.STUDENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Problem.PROBLEM.QUESTION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return Problem.PROBLEM.WEIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getScore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getCourseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getQuestionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getWeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProblemRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProblemRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProblemRecord value3(Double value) {
        setScore(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProblemRecord value4(Integer value) {
        setCourseId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProblemRecord value5(Integer value) {
        setStudentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProblemRecord value6(Integer value) {
        setQuestionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProblemRecord value7(Double value) {
        setWeight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProblemRecord values(Integer value1, String value2, Double value3, Integer value4, Integer value5, Integer value6, Double value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProblemRecord
     */
    public ProblemRecord() {
        super(Problem.PROBLEM);
    }

    /**
     * Create a detached, initialised ProblemRecord
     */
    public ProblemRecord(Integer id, String name, Double score, Integer courseId, Integer studentId, Integer questionId, Double weight) {
        super(Problem.PROBLEM);

        set(0, id);
        set(1, name);
        set(2, score);
        set(3, courseId);
        set(4, studentId);
        set(5, questionId);
        set(6, weight);
    }
}
