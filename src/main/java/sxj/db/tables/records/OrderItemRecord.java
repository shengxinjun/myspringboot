/**
 * This class is generated by jOOQ
 */
package sxj.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import sxj.db.tables.OrderItem;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderItemRecord extends UpdatableRecordImpl<OrderItemRecord> implements Record7<Integer, String, String, String, Double, String, Integer> {

    private static final long serialVersionUID = -403246884;

    /**
     * Setter for <code>test.order_item.id</code>.
     */
    public OrderItemRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>test.order_item.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.order_item.imgs</code>.
     */
    public OrderItemRecord setImgs(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>test.order_item.imgs</code>.
     */
    public String getImgs() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.order_item.description</code>.
     */
    public OrderItemRecord setDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>test.order_item.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.order_item.name</code>.
     */
    public OrderItemRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>test.order_item.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test.order_item.price</code>.
     */
    public OrderItemRecord setPrice(Double value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>test.order_item.price</code>.
     */
    public Double getPrice() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>test.order_item.type</code>.
     */
    public OrderItemRecord setType(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>test.order_item.type</code>.
     */
    public String getType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>test.order_item.order_id</code>.
     */
    public OrderItemRecord setOrderId(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>test.order_item.order_id</code>.
     */
    public Integer getOrderId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, Double, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, Double, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return OrderItem.ORDER_ITEM.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return OrderItem.ORDER_ITEM.IMGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return OrderItem.ORDER_ITEM.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return OrderItem.ORDER_ITEM.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return OrderItem.ORDER_ITEM.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return OrderItem.ORDER_ITEM.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return OrderItem.ORDER_ITEM.ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getImgs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderItemRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderItemRecord value2(String value) {
        setImgs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderItemRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderItemRecord value4(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderItemRecord value5(Double value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderItemRecord value6(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderItemRecord value7(Integer value) {
        setOrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderItemRecord values(Integer value1, String value2, String value3, String value4, Double value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderItemRecord
     */
    public OrderItemRecord() {
        super(OrderItem.ORDER_ITEM);
    }

    /**
     * Create a detached, initialised OrderItemRecord
     */
    public OrderItemRecord(Integer id, String imgs, String description, String name, Double price, String type, Integer orderId) {
        super(OrderItem.ORDER_ITEM);

        set(0, id);
        set(1, imgs);
        set(2, description);
        set(3, name);
        set(4, price);
        set(5, type);
        set(6, orderId);
    }
}
