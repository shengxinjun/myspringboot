/**
 * This class is generated by jOOQ
 */
package sxj.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import sxj.db.tables.Course;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseRecord extends UpdatableRecordImpl<CourseRecord> implements Record8<Integer, String, String, Integer, Double, String, Double, Double> {

    private static final long serialVersionUID = -422718768;

    /**
     * Setter for <code>test.course.id</code>.
     */
    public CourseRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>test.course.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.course.name</code>. 课程名称
     */
    public CourseRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>test.course.name</code>. 课程名称
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.course.type</code>. 考试类型
     */
    public CourseRecord setType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>test.course.type</code>. 考试类型
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.course.clazz_id</code>. 班级id
     */
    public CourseRecord setClazzId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>test.course.clazz_id</code>. 班级id
     */
    public Integer getClazzId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>test.course.weight</code>. 课程权重
     */
    public CourseRecord setWeight(Double value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>test.course.weight</code>. 课程权重
     */
    public Double getWeight() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>test.course.code</code>. 指标点代码
     */
    public CourseRecord setCode(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>test.course.code</code>. 指标点代码
     */
    public String getCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>test.course.normal_percent</code>. 平时成绩百分比
     */
    public CourseRecord setNormalPercent(Double value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>test.course.normal_percent</code>. 平时成绩百分比
     */
    public Double getNormalPercent() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>test.course.terminal_percent</code>. 期末成绩百分比
     */
    public CourseRecord setTerminalPercent(Double value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>test.course.terminal_percent</code>. 期末成绩百分比
     */
    public Double getTerminalPercent() {
        return (Double) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, Integer, Double, String, Double, Double> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, Integer, Double, String, Double, Double> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Course.COURSE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Course.COURSE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Course.COURSE.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Course.COURSE.CLAZZ_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return Course.COURSE.WEIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Course.COURSE.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return Course.COURSE.NORMAL_PERCENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return Course.COURSE.TERMINAL_PERCENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getClazzId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getWeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getNormalPercent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getTerminalPercent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value3(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value4(Integer value) {
        setClazzId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value5(Double value) {
        setWeight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value6(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value7(Double value) {
        setNormalPercent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord value8(Double value) {
        setTerminalPercent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseRecord values(Integer value1, String value2, String value3, Integer value4, Double value5, String value6, Double value7, Double value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CourseRecord
     */
    public CourseRecord() {
        super(Course.COURSE);
    }

    /**
     * Create a detached, initialised CourseRecord
     */
    public CourseRecord(Integer id, String name, String type, Integer clazzId, Double weight, String code, Double normalPercent, Double terminalPercent) {
        super(Course.COURSE);

        set(0, id);
        set(1, name);
        set(2, type);
        set(3, clazzId);
        set(4, weight);
        set(5, code);
        set(6, normalPercent);
        set(7, terminalPercent);
    }
}
