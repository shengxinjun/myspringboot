/**
 * This class is generated by jOOQ
 */
package sxj.db.tables.records;


import java.util.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;

import sxj.db.tables.Product;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductRecord extends UpdatableRecordImpl<ProductRecord> implements Record10<Integer, String, String, String, Double, Date, Date, Integer, String, Integer> {

    private static final long serialVersionUID = -1485655543;

    /**
     * Setter for <code>test.product.id</code>.
     */
    public ProductRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>test.product.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.product.imgs</code>.
     */
    public ProductRecord setImgs(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>test.product.imgs</code>.
     */
    public String getImgs() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.product.description</code>.
     */
    public ProductRecord setDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>test.product.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.product.name</code>.
     */
    public ProductRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>test.product.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test.product.price</code>.
     */
    public ProductRecord setPrice(Double value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>test.product.price</code>.
     */
    public Double getPrice() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>test.product.update_date</code>.
     */
    public ProductRecord setUpdateDate(Date value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>test.product.update_date</code>.
     */
    public Date getUpdateDate() {
        return (Date) get(5);
    }

    /**
     * Setter for <code>test.product.create_date</code>.
     */
    public ProductRecord setCreateDate(Date value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>test.product.create_date</code>.
     */
    public Date getCreateDate() {
        return (Date) get(6);
    }

    /**
     * Setter for <code>test.product.deleted</code>.
     */
    public ProductRecord setDeleted(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>test.product.deleted</code>.
     */
    public Integer getDeleted() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>test.product.type</code>.
     */
    public ProductRecord setType(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>test.product.type</code>.
     */
    public String getType() {
        return (String) get(8);
    }

    /**
     * Setter for <code>test.product.order_id</code>.
     */
    public ProductRecord setOrderId(Integer value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>test.product.order_id</code>.
     */
    public Integer getOrderId() {
        return (Integer) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, String, String, Double, Date, Date, Integer, String, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, String, String, Double, Date, Date, Integer, String, Integer> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Product.PRODUCT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Product.PRODUCT.IMGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Product.PRODUCT.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Product.PRODUCT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return Product.PRODUCT.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field6() {
        return Product.PRODUCT.UPDATE_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field7() {
        return Product.PRODUCT.CREATE_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Product.PRODUCT.DELETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Product.PRODUCT.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return Product.PRODUCT.ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getImgs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value6() {
        return getUpdateDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value7() {
        return getCreateDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value2(String value) {
        setImgs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value4(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value5(Double value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value6(Date value) {
        setUpdateDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value7(Date value) {
        setCreateDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value8(Integer value) {
        setDeleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value9(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord value10(Integer value) {
        setOrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductRecord values(Integer value1, String value2, String value3, String value4, Double value5, Date value6, Date value7, Integer value8, String value9, Integer value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductRecord
     */
    public ProductRecord() {
        super(Product.PRODUCT);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(Integer id, String imgs, String description, String name, Double price, Date updateDate, Date createDate, Integer deleted, String type, Integer orderId) {
        super(Product.PRODUCT);

        set(0, id);
        set(1, imgs);
        set(2, description);
        set(3, name);
        set(4, price);
        set(5, updateDate);
        set(6, createDate);
        set(7, deleted);
        set(8, type);
        set(9, orderId);
    }
}
