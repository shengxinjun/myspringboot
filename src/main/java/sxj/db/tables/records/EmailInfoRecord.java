/**
 * This class is generated by jOOQ
 */
package sxj.db.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import sxj.db.tables.EmailInfo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailInfoRecord extends UpdatableRecordImpl<EmailInfoRecord> implements Record7<Integer, String, String, String, String, String, Date> {

    private static final long serialVersionUID = 1580495035;

    /**
     * Setter for <code>test.email_info.id</code>.
     */
    public EmailInfoRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>test.email_info.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.email_info.sender</code>.
     */
    public EmailInfoRecord setSender(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>test.email_info.sender</code>.
     */
    public String getSender() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.email_info.receiver</code>.
     */
    public EmailInfoRecord setReceiver(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>test.email_info.receiver</code>.
     */
    public String getReceiver() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.email_info.context</code>.
     */
    public EmailInfoRecord setContext(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>test.email_info.context</code>.
     */
    public String getContext() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test.email_info.code</code>.
     */
    public EmailInfoRecord setCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>test.email_info.code</code>.
     */
    public String getCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>test.email_info.subject</code>.
     */
    public EmailInfoRecord setSubject(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>test.email_info.subject</code>.
     */
    public String getSubject() {
        return (String) get(5);
    }

    /**
     * Setter for <code>test.email_info.send_date</code>.
     */
    public EmailInfoRecord setSendDate(Date value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>test.email_info.send_date</code>.
     */
    public Date getSendDate() {
        return (Date) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, String, Date> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, String, Date> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return EmailInfo.EMAIL_INFO.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return EmailInfo.EMAIL_INFO.SENDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return EmailInfo.EMAIL_INFO.RECEIVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return EmailInfo.EMAIL_INFO.CONTEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return EmailInfo.EMAIL_INFO.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return EmailInfo.EMAIL_INFO.SUBJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field7() {
        return EmailInfo.EMAIL_INFO.SEND_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSender();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getReceiver();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getContext();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSubject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value7() {
        return getSendDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmailInfoRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmailInfoRecord value2(String value) {
        setSender(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmailInfoRecord value3(String value) {
        setReceiver(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmailInfoRecord value4(String value) {
        setContext(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmailInfoRecord value5(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmailInfoRecord value6(String value) {
        setSubject(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmailInfoRecord value7(Date value) {
        setSendDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmailInfoRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, Date value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmailInfoRecord
     */
    public EmailInfoRecord() {
        super(EmailInfo.EMAIL_INFO);
    }

    /**
     * Create a detached, initialised EmailInfoRecord
     */
    public EmailInfoRecord(Integer id, String sender, String receiver, String context, String code, String subject, Date sendDate) {
        super(EmailInfo.EMAIL_INFO);

        set(0, id);
        set(1, sender);
        set(2, receiver);
        set(3, context);
        set(4, code);
        set(5, subject);
        set(6, sendDate);
    }
}
