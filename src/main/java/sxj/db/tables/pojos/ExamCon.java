/**
 * This class is generated by jOOQ
 */
package sxj.db.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExamCon implements Serializable {

    private static final long serialVersionUID = 51870336;

    private Integer eid;
    private String  coursename;
    private String  exam;

    public ExamCon() {}

    public ExamCon(ExamCon value) {
        this.eid = value.eid;
        this.coursename = value.coursename;
        this.exam = value.exam;
    }

    public ExamCon(
        Integer eid,
        String  coursename,
        String  exam
    ) {
        this.eid = eid;
        this.coursename = coursename;
        this.exam = exam;
    }

    public Integer getEid() {
        return this.eid;
    }

    public ExamCon setEid(Integer eid) {
        this.eid = eid;
        return this;
    }

    public String getCoursename() {
        return this.coursename;
    }

    public ExamCon setCoursename(String coursename) {
        this.coursename = coursename;
        return this;
    }

    public String getExam() {
        return this.exam;
    }

    public ExamCon setExam(String exam) {
        this.exam = exam;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ExamCon other = (ExamCon) obj;
        if (eid == null) {
            if (other.eid != null)
                return false;
        }
        else if (!eid.equals(other.eid))
            return false;
        if (coursename == null) {
            if (other.coursename != null)
                return false;
        }
        else if (!coursename.equals(other.coursename))
            return false;
        if (exam == null) {
            if (other.exam != null)
                return false;
        }
        else if (!exam.equals(other.exam))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((eid == null) ? 0 : eid.hashCode());
        result = prime * result + ((coursename == null) ? 0 : coursename.hashCode());
        result = prime * result + ((exam == null) ? 0 : exam.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ExamCon (");

        sb.append(eid);
        sb.append(", ").append(coursename);
        sb.append(", ").append(exam);

        sb.append(")");
        return sb.toString();
    }
}
